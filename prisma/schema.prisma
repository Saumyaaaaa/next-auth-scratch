// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String     @id @default(uuid())
  email String  @unique
  username  String?
  password String
  isVerified Boolean?
  verifyToken String?
  verifyTokenExpiry DateTime?
  cards Card[]
  bank_detail   BankDetails?
  // transactions Transaction[]
  
}

model Card {
  id        Int     @id @default(autoincrement())
  card_name String
  card_number BigInt @unique
  bank_name String
  user    User    @relation(fields: [authorId], references: [id])
  authorId  String
  card_type String?
  expiryDate DateTime
}

model BankDetails {
  id          String      @id @default(uuid())
  bank_name   String
  bank_branch String?
  acc_number  BigInt
  acc_type    String
  open_date   DateTime    @default(now())
  user        User?       @relation(fields: [user_id], references: [id])
  user_id     String?     @unique
}


// model Transaction {
//   id Int @id @default(autoincrement())
//   user User @relation(fields: [authorId] ,references: [id])
//   authorId  String
//   transaction_type TransactionType? 
//   trans_amount Int
//   merchant_username String 
//   merchant_acc_number Int
//   merchant_bank_info String
//   remarks String?
//   category String?
//   trans_date DateTime
// }


// enum TransactionType {
//   PURCHASE
//   DEPOSIT
//   WITHDRAW
// }